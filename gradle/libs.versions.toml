[versions]
adapterRxjava2Version = "2.9.0"
autodisposeVersion = "1.4.1"
converterGsonVersion = "2.9.0"
chuckLibraryVersion = "4.0.0"
guavaVersion = "33.1.0-android"
opentelemetry = "1.36.0"
opentelemetry-alpha = "2.1.0-alpha"
opentelemetry-semconv = "1.23.1-alpha"
opentelemetry-contrib = "1.33.0-alpha"
mockito = "5.11.0"
junit = "5.10.2"
byteBuddy = "1.14.12"
okhttp = "4.12.0"
kotlin = "1.9.23"
junitVersion = "4.13.2"
androidxJunitVersion = "1.1.5"
coreKtx = "1.12.0"
material = "1.11.0"
constraintlayout = "2.1.4"
navigationFragmentKtx = "2.7.7"
navigationUiKtx = "2.7.7"
opentelemetryExtensionTracePropagatorsVersion = "1.24.0"
playServicesLocationVersion = "21.2.0"
preferenceVersion = "1.2.1"
retrofitVersion = "2.9.0"
rxandroidVersion = "2.1.1"
rxjavaVersion = "2.2.21"
rxrelayVersion = "2.1.1"
timberVersion = "5.0.1"

[libraries]
androidx-preference = { module = "androidx.preference:preference", version.ref = "preferenceVersion" }
autodispose = { module = "com.uber.autodispose:autodispose", version.ref = "autodisposeVersion" }
autodispose-android = { module = "com.uber.autodispose:autodispose-android", version.ref = "autodisposeVersion" }
autodispose-android-archcomponents = { module = "com.uber.autodispose:autodispose-android-archcomponents", version.ref = "autodisposeVersion" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "converterGsonVersion" }
chuck-library = { module = "com.github.chuckerteam.chucker:library", version.ref = "chuckLibraryVersion" }
chuck-library-no-op = { module = "com.github.chuckerteam.chucker:library-no-op", version.ref = "chuckLibraryVersion" }
guava = { module = "com.google.guava:guava", version.ref = "guavaVersion" }
opentelemetry-extension-trace-propagators = { module = "io.opentelemetry:opentelemetry-extension-trace-propagators", version.ref = "opentelemetryExtensionTracePropagatorsVersion" }
opentelemetry-platform = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom-alpha", version.ref = "opentelemetry-alpha" }
androidx-appcompat = "androidx.appcompat:appcompat:1.6.1"
androidx-navigation-fragment = "androidx.navigation:navigation-fragment:2.7.7"
androidx-core = "androidx.core:core:1.12.0"
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
androidx-navigation-fragment-ktx = { group = "androidx.navigation", name = "navigation-fragment-ktx", version.ref = "navigationFragmentKtx" }
androidx-navigation-ui-ktx = { group = "androidx.navigation", name = "navigation-ui-ktx", version.ref = "navigationUiKtx" }
findbugs-jsr305 = "com.google.code.findbugs:jsr305:3.0.2"


byteBuddy = { module = "net.bytebuddy:byte-buddy", version.ref = "byteBuddy" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
opentelemetry-instrumentation-api = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-api" }
opentelemetry-instrumentation-apiSemconv = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-api-incubator" }
opentelemetry-instrumentation-okhttp = { module = "io.opentelemetry.instrumentation:opentelemetry-okhttp-3.0", version.ref = "opentelemetry-alpha" }
opentelemetry-semconv = { module = "io.opentelemetry.semconv:opentelemetry-semconv", version.ref = "opentelemetry-semconv" }
opentelemetry-api = { module = "io.opentelemetry:opentelemetry-api" }
opentelemetry-sdk = { module = "io.opentelemetry:opentelemetry-sdk" }
opentelemetry-exporter-logging = { module = "io.opentelemetry:opentelemetry-exporter-logging", version.ref = "opentelemetry" }
opentelemetry-diskBuffering = { module = "io.opentelemetry.contrib:opentelemetry-disk-buffering", version.ref = "opentelemetry-contrib" }
opentelemetry-exporter-otlp = { module = "io.opentelemetry:opentelemetry-exporter-otlp", version.ref = "opentelemetry" }

#Test tools
opentelemetry-sdk-testing = { module = "io.opentelemetry:opentelemetry-sdk-testing", version.ref = "opentelemetry" }
androidx-test-core = "androidx.test:core:1.5.0"
gson = "com.google.code.gson:gson:2.10.1"
annotationx = "androidx.annotation:annotation:1.7.1"
play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocationVersion" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofitVersion" }
retrofit2-adapter-rxjava2 = { module = "com.squareup.retrofit2:adapter-rxjava2", version.ref = "adapterRxjava2Version" }
rxandroid = { module = "io.reactivex.rxjava2:rxandroid", version.ref = "rxandroidVersion" }
rxjava = { module = "io.reactivex.rxjava2:rxjava", version.ref = "rxjavaVersion" }
rxrelay = { module = "com.jakewharton.rxrelay2:rxrelay", version.ref = "rxrelayVersion" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timberVersion" }
truth = "com.google.truth:truth:1.4.2"
androidx-test-runner = "androidx.test:runner:1.5.2"
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }
mockk = "io.mockk:mockk:1.13.10"
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
junit-vintage-engine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "junit" }
robolectric = "org.robolectric:robolectric:4.11.1"
assertj-core = "org.assertj:assertj-core:3.25.3"
awaitility = "org.awaitility:awaitility:4.2.1"
okhttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }

#Compilation tools
desugarJdkLibs = "com.android.tools:desugar_jdk_libs:2.0.4"
nullaway = "com.uber.nullaway:nullaway:0.10.24"
errorprone-core = "com.google.errorprone:error_prone_core:2.26.1"
errorprone-javac = "com.google.errorprone:javac:9+181-r4173-1"
errorprone-plugin = "net.ltgt.gradle:gradle-errorprone-plugin:3.1.0"
nullaway-plugin = "net.ltgt.gradle:gradle-nullaway-plugin:2.0.0"
animalsniffer-plugin = "ru.vyarus:gradle-animalsniffer-plugin:1.7.1"
android-plugin = "com.android.tools.build:gradle:8.3.2"
byteBuddy-plugin = { module = "net.bytebuddy:byte-buddy-gradle-plugin", version.ref = "byteBuddy" }
kotlin-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junitVersion" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidxJunitVersion" }

[bundles]
mocking = ["mockito-core", "mockito-junit-jupiter", "mockk"]
junit = ["junit-jupiter-api", "junit-jupiter-engine", "junit-vintage-engine"]

[plugins]
publishPlugin = { id = "io.github.gradle-nexus.publish-plugin", version = "1.3.0" }
